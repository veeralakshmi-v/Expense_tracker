expense_tracker/
â”‚
â”œâ”€â”€ main.py              ðŸ‘‰ Starts the app
â”œâ”€â”€ database.py          ðŸ‘‰ Connects to database
â”œâ”€â”€ models.py            ðŸ‘‰ Table structure (Expense)
â”œâ”€â”€ schemas.py           ðŸ‘‰ Defines how data looks (input/output)
â””â”€â”€ crud.py              ðŸ‘‰ All database operations (add, get, find highest)

1.main.py starts first
Inside main.py, this line runs:
    Base.metadata.create_all(bind=engine)
This tells Python to create database tables if they donâ€™t already exist.

2.Then it connects routes:
    app.include_router(expense.router)
This loads all your API endpoints from routes/expense.py.

Flow is:
main.py â†’ database.py (connect DB)
       â†’ models.py (create table)
       â†’ routes/expense.py (API endpoints)
       â†’ crud.py (DB operations)

3. SQLALCHEMY_DATABASE_URL = "sqlite:///./expenses.db"
You do not have to create it manually.
When you run your app for the first time, FastAPI + SQLAlchemy will automatically generate this file and the table inside it.

Final:
You run: uvicorn main:app --reload
         â†“
FastAPI reads main.py
         â†“
main.py â†’ connects to database.py
         â†“
database.py â†’ creates SQLite connection (expenses.db)
         â†“
models.py â†’ defines Expense table
         â†“
Base.metadata.create_all() â†’ creates table in database
         â†“
routes/expense.py â†’ defines URL endpoints (API)
         â†“
crud.py â†’ performs add/get/highest functions on DB
